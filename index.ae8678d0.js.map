{"mappings":"ACEA,MAAM,EAAY,SAAS,aAAa,CAAC,iBACnC,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAS,SAAS,gBAAgB,CAAC,gBACzC,IAAI,EAAc,EAAO,MAAM,CAC3B,EAAS,EAGb,MAAM,EAAe,KACnB,EAAO,OAAO,CAAC,CAAC,EAAK,KACnB,EAAI,KAAK,CAAC,OAAO,CACf,IAAU,GACV,IAAW,AAAA,CAAA,EAAS,EAAI,CAAA,EAAe,GACvC,IAAW,AAAA,CAAA,EAAS,CAAA,EAAK,EACrB,QACA,OACN,EAAI,SAAS,CAAC,MAAM,CAClB,sBACA,0BACA,2BAEE,IAAU,EACZ,EAAI,SAAS,CAAC,GAAG,CAAC,uBACT,IAAW,AAAA,CAAA,EAAS,EAAI,CAAA,EAAe,EAChD,EAAI,SAAS,CAAC,GAAG,CAAC,2BACT,IAAW,AAAA,CAAA,EAAS,CAAA,EAAK,GAClC,EAAI,SAAS,CAAC,GAAG,CAAC,0BAEtB,EACF,EAGM,EAAa,KACjB,IACA,EAAU,OAAO,CAAG,KAClB,EAAU,AAAA,CAAA,EAAS,CAAA,EAAK,EACxB,GACF,EAEA,EAAU,OAAO,CAAG,KAClB,EAAU,AAAA,CAAA,EAAS,EAAI,CAAA,EAAe,EACtC,GACF,CACF,EAGA,IAAI,EAAe,EACnB,EAAO,OAAO,CAAC,AAAC,IACV,EAAI,QAAQ,CACd,KAEA,EAAI,MAAM,CAAG,OAEP,IAAiB,GACnB,GAEJ,EACA,EAAI,OAAO,CAAG,OAER,IAAiB,GACnB,GAEJ,EAEJ,GAGI,IAAiB,GACnB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nconst arrowNext = document.querySelector(\".arrow--right\");\nconst arrowPrev = document.querySelector(\".arrow--left\");\nconst images = document.querySelectorAll(\".slider__img\");\nlet countImages = images.length;\nlet active = 0; // Start with the first image\n// Function to start or change slider state\nconst updateSlider = ()=>{\n    images.forEach((img, index)=>{\n        img.style.display = index === active || index === (active - 1 + countImages) % countImages || index === (active + 1) % countImages ? \"block\" : \"none\";\n        img.classList.remove(\"slider__img--active\", \"slider__img--inactive-1\", \"slider__img--inactive-2\");\n        if (index === active) img.classList.add(\"slider__img--active\");\n        else if (index === (active - 1 + countImages) % countImages) img.classList.add(\"slider__img--inactive-1\");\n        else if (index === (active + 1) % countImages) img.classList.add(\"slider__img--inactive-2\");\n    });\n};\n// Function to start slider after images are loaded\nconst initSlider = ()=>{\n    updateSlider(); // Update the slider\n    arrowNext.onclick = ()=>{\n        active = (active + 1) % countImages; // Move to the next image\n        updateSlider();\n    };\n    arrowPrev.onclick = ()=>{\n        active = (active - 1 + countImages) % countImages; // Move to the previous image\n        updateSlider();\n    };\n};\n// Check if all images are loaded\nlet imagesLoaded = 0;\nimages.forEach((img)=>{\n    if (img.complete) imagesLoaded++;\n    else {\n        img.onload = ()=>{\n            imagesLoaded++;\n            if (imagesLoaded === countImages) initSlider(); // All images loaded, start the slider\n        };\n        img.onerror = ()=>{\n            imagesLoaded++;\n            if (imagesLoaded === countImages) initSlider(); // Handle case where an image fails to load\n        };\n    }\n});\n// Start slider if all images are already loaded\nif (imagesLoaded === countImages) initSlider();\n\n//# sourceMappingURL=index.ae8678d0.js.map\n","'use strict'\n\nconst arrowNext = document.querySelector('.arrow--right');\nconst arrowPrev = document.querySelector('.arrow--left');\nconst images = document.querySelectorAll('.slider__img');\nlet countImages = images.length;\nlet active = 0; // Start with the first image\n\n// Function to start or change slider state\nconst updateSlider = () => {\n  images.forEach((img, index) => {\n    img.style.display =\n      index === active ||\n      index === (active - 1 + countImages) % countImages ||\n      index === (active + 1) % countImages\n        ? 'block'\n        : 'none';\n    img.classList.remove(\n      'slider__img--active',\n      'slider__img--inactive-1',\n      'slider__img--inactive-2',\n    );\n    if (index === active) {\n      img.classList.add('slider__img--active');\n    } else if (index === (active - 1 + countImages) % countImages) {\n      img.classList.add('slider__img--inactive-1');\n    } else if (index === (active + 1) % countImages) {\n      img.classList.add('slider__img--inactive-2');\n    }\n  });\n};\n\n// Function to start slider after images are loaded\nconst initSlider = () => {\n  updateSlider(); // Update the slider\n  arrowNext.onclick = () => {\n    active = (active + 1) % countImages; // Move to the next image\n    updateSlider();\n  };\n\n  arrowPrev.onclick = () => {\n    active = (active - 1 + countImages) % countImages; // Move to the previous image\n    updateSlider();\n  };\n};\n\n// Check if all images are loaded\nlet imagesLoaded = 0;\nimages.forEach((img) => {\n  if (img.complete) {\n    imagesLoaded++;\n  } else {\n    img.onload = () => {\n      imagesLoaded++;\n      if (imagesLoaded === countImages) {\n        initSlider(); // All images loaded, start the slider\n      }\n    };\n    img.onerror = () => {\n      imagesLoaded++;\n      if (imagesLoaded === countImages) {\n        initSlider(); // Handle case where an image fails to load\n      }\n    };\n  }\n});\n\n// Start slider if all images are already loaded\nif (imagesLoaded === countImages) {\n  initSlider();\n}\n"],"names":["arrowNext","document","querySelector","arrowPrev","images","querySelectorAll","countImages","length","active","updateSlider","forEach","img","index","style","display","classList","remove","add","initSlider","onclick","imagesLoaded","complete","onload","onerror"],"version":3,"file":"index.ae8678d0.js.map"}